@model LTW.Models.KhachHang
@{
    ViewBag.Title = "Đăng ký";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .register-container {
        max-width: 680px;
        margin: 60px auto;
        padding: 0 20px;
    }

    .register-card {
        background-color: #ebe2b3;

        border-radius: 8px;
        padding: 40px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }

    .register-header {
        text-align: center;
        margin-bottom: 30px;
    }

    .register-title {
        font-size: 28px;
        font-weight: 500;
        color: #333;
        margin-bottom: 10px;
    }

    .form-grid {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 20px;
    }

    .form-group {
        margin-bottom: 25px;
    }

        .form-group.full-width {
            grid-column: 1 / -1;
        }

    .form-label {
        display: block;
        margin-bottom: 8px;
        font-size: 14px;
        color: #555;
        font-weight: 500;
    }

    .form-control {
        width: 100%;
        padding: 12px 16px;
        border: 1px solid #ddd;
        border-radius: 6px;
        font-size: 15px;
        transition: all 0.3s ease;
    }

        .form-control:focus {
            border-color: #333;
            box-shadow: 0 0 0 2px rgba(0,0,0,0.1);
            outline: none;
        }

    .text-danger {
        color: #dc3545;
        font-size: 13px;
        margin-top: 5px;
        display: block;
    }

    .register-button {
        width: 100%;
        padding: 14px;
        background-color: #333;
        color: #fff;
        border: none;
        border-radius: 6px;
        font-size: 16px;
        font-weight: 500;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

        .register-button:hover {
            background-color: #000;
        }

    .login-link {
        text-align: center;
        margin-top: 20px;
        font-size: 14px;
        color: #666;
    }

        .login-link a {
            color: #333;
            text-decoration: none;
            font-weight: 500;
            margin-left: 5px;
        }

            .login-link a:hover {
                text-decoration: underline;
            }

    .input-group {
        position: relative;
    }

    .toggle-password {
        position: absolute;
        right: 12px;
        top: 50%;
        transform: translateY(-50%);
        cursor: pointer;
        color: #666;
        padding: 5px;
        background: none;
        border: none;
    }

    .alert {
        padding: 15px;
        margin-bottom: 20px;
        border-radius: 6px;
        font-size: 14px;
        background-color: #f8d7da;
        color: #721c24;
        border: 1px solid #f5c6cb;
    }
</style>

@if (TempData["Error"] != null)
{
    <div class="alert">
        <i class="fas fa-exclamation-circle"></i>
        @TempData["Error"]
    </div>
}

<div class="register-container">
    <div class="register-card">
        <div class="register-header">
            <h1 class="register-title">Đăng ký tài khoản</h1>
            <p class="text-muted">Vui lòng điền đầy đủ thông tin bên dưới</p>
        </div>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-grid">
                <div class="form-group">
                    <label class="form-label">Tên đăng nhập</label>
                    <div class="input-group">
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", placeholder = "Nhập tên đăng nhập" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label class="form-label">Họ và tên</label>
                    <div class="input-group">
                        @Html.EditorFor(model => model.TenKhachHang, new { htmlAttributes = new { @class = "form-control", placeholder = "Nhập họ và tên" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.TenKhachHang, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label class="form-label">Mật khẩu</label>
                    <div class="input-group">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @type = "password", placeholder = "Nhập mật khẩu" } })
                        <button type="button" class="toggle-password" onclick="togglePassword(this)">
                            <i class="far fa-eye"></i>
                        </button>
                    </div>
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label class="form-label">Xác nhận mật khẩu</label>
                    <div class="input-group">
                        <input class="form-control" type="password" id="MatKhauXacNhan" name="MatKhauXacNhan" placeholder="Nhập lại mật khẩu">
                        <button type="button" class="toggle-password" onclick="togglePassword(this)">
                            <i class="far fa-eye"></i>
                        </button>
                    </div>
                    <span class="text-danger">@ViewData["NhapMKXN"] @ViewData["MatKhauGiongNhau"]</span>
                </div>

                <div class="form-group">
                    <label class="form-label">Email</label>
                    <div class="input-group">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @type = "email", placeholder = "example@email.com" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label class="form-label">Số điện thoại</label>
                    <div class="input-group">
                        @Html.EditorFor(model => model.SDT, new { htmlAttributes = new { @class = "form-control", placeholder = "Nhập số điện thoại" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.SDT, "", new { @class = "text-danger" })
                </div>

                <div class="form-group full-width">
                    <label class="form-label">Địa chỉ</label>
                    <div class="input-group">
                        @Html.EditorFor(model => model.DiaChi, new { htmlAttributes = new { @class = "form-control", placeholder = "Nhập địa chỉ" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.DiaChi, "", new { @class = "text-danger" })
                </div>

                @Html.HiddenFor(model => model.RoleID, new { Value = 0 })

                <div class="form-group full-width">
                    <button type="submit" class="register-button">
                        <i class="fas fa-user-plus" style="margin-right: 8px;"></i>
                        Đăng ký
                    </button>
                </div>
            </div>
        }

        <div class="login-link">
            Đã có tài khoản?
            @Html.ActionLink("Đăng nhập ngay", "DangNhap", "NguoiDung")
        </div>
    </div>
</div>

<script>
    function togglePassword(button) {
        const input = button.parentElement.querySelector('input');
        const icon = button.querySelector('i');

        if (input.type === "password") {
            input.type = "text";
            icon.classList.remove("fa-eye");
            icon.classList.add("fa-eye-slash");
        } else {
            input.type = "password";
            icon.classList.remove("fa-eye-slash");
            icon.classList.add("fa-eye");
        }
    }
</script>