
@model LTW.Models.HomeModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .category-item-link {
        text-decoration: none !important;
    }

    .category-filter {
        background-color: transparent;
        padding: 20px;
    }

    .category-title {
        font-size: 16px;
        font-weight: 600;
        margin-bottom: 20px;
        color: #000;
        border-bottom: 1px solid #e3ddbb;
    }

    .category-list {
        list-style: none;
        padding: 0;
    }

    .category-item {
        margin-bottom: 15px;
        border-bottom: 1px solid #e0e0e0;
        padding-bottom: 15px;
    }

    .category-link {
        text-decoration: none;
        color: #000;
        font-size: 14px;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .category-link:after {
        content: '+';
        font-size: 16px;
    }

    .category-link:hover {
        text-decoration: none;
        color: #000;
    }

    .promo-banner {
        width: 100%;
        padding: 0 0;
        margin-top: 20px;
    }

    .slider {
        position: relative;
        width: 100%;
        height: 486px; /* Set chiều cao cố định */
        overflow: hidden;
    }

    .slider-container {
        display: flex;
        transition: transform 0.5s ease-in-out;
        width: 200%; /* Vì có 2 slides */
        height: 100%; /* Đảm bảo container cũng cao 1422px */
    }

    .slide {
        width: 50%; /* Mỗi slide chiếm 50% của container */
        flex-shrink: 0;
        height: 100%; /* Đảm bảo slide cũng cao 1422px */
    }

    .slide img {
        width: 100%;
        height: 100%; /* Đảm bảo ảnh lấp đầy slide */
        object-fit: fill; /* Đảm bảo ảnh không bị méo */
        display: block;
    }

    /* Navigation Buttons */
    .slider-button {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        background: rgba(0, 0, 0, 0.5);
        color: white;
        padding: 16px;
        border: none;
        cursor: pointer;
        border-radius: 50%;
        transition: background 0.3s;
    }

    .slider-button:hover {
        background: rgba(0, 0, 0, 0.8);
    }

    .prev {
        left: 20px;
    }

    .next {
        right: 20px;
    }

    /* Dots/Indicators */
    .slider-dots {
        position: absolute;
        bottom: 20px;
        left: 50%;
        transform: translateX(-50%);
        display: flex;
        gap: 10px;
    }

    .dot {
        width: 12px;
        height: 12px;
        background: rgba(255, 255, 255, 0.5);
        border-radius: 50%;
        cursor: pointer;
        transition: background 0.3s;
    }

    .dot.active {
        background: white;
    }

    .block-header {
        font-weight: 400;
        font-size: 30px;
        text-align: center;
    }

    .product-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 30px;
        border-bottom: 1px solid #e3ddbb;
    }

    .product-title {
        font-size: 20px;
        font-weight: 500;
    }

    .product-title span {
        color: #666;
        font-size: 16px;
        margin-left: 10px;
    }

    .product-grid {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: 30px;
    }

    .product-item {
        background-color: transparent;
        position: relative;
    }

    .product-item:hover {
        transform: translateY(-5px); /* Di chuyển sản phẩm lên trên một chút */
        box-shadow: 0 5px 15px rgba(0,0,0,0.1); /* Thêm bóng đổ */
    }

    .product-image {
        position: relative;
        padding-top: 133%; /* Tỷ lệ ảnh 3:4 */
        overflow: hidden; /* Ẩn phần ảnh bị tràn */
    }

    .product-image img {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s ease; /* Hiệu ứng zoom ảnh */
    }

    .product-item:hover .product-image img {
        transform: scale(1.05); /* Zoom ảnh lên 105% */
    }

    .wishlist-icon {
        position: absolute;
        bottom: 10px;
        right: 10px;
        color: #666;
        font-size: 20px;
    }

    .wishlist-btn {
        position: absolute;
        bottom: 10px;
        right: 10px;
        background: rgba(255, 255, 255, 0.9);
        border: none;
        border-radius: 50%;
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: all 0.3s ease;
        z-index: 10;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }

    .wishlist-btn:hover {
        transform: scale(1.1);
        background: white;
    }

    .wishlist-btn i {
        font-size: 18px;
        color: #666;
    }

    .wishlist-btn.active i {
        color: #ff4d4d;
    }

    .product-info {
        padding: 15px;
    }

    .product-price {
        margin-bottom: 10px;
    }

    .current-price {
        font-weight: bold;
        font-size: 18px;
    }

    .product-name {
        font-size: 14px;
        margin-bottom: 10px;
        color: #333;
        transition: color 0.3s ease;
    }

    /* Đậm màu text khi hover */
    .product-item:hover .product-name {
        color: #000; 
        font-weight: bold;
    }

    .product-colors {
        display: flex;
        gap: 5px;
    }

    .color-dot {
        width: 15px;
        height: 15px;
        border-radius: 50%;
        border: 1px solid #ddd;
    }

    .product-link {
        text-decoration: none;
        color: inherit;
        display: block;
    }

    .product-link:hover {
        text-decoration: none;
        color: inherit;
    }

    /* Sort Sản phẩm */
    .sort-dropdown {
        position: relative;
    }

    .sort-btn {
        background: none;
        border: none;
        padding: 8px 15px;
        cursor: pointer;
        display: flex;
        align-items: center;
        gap: 8px;
        font-size: 14px;
    }

    .sort-btn i {
        font-size: 12px;
    }

    .sort-menu {
        position: absolute;
        top: 100%;
        right: 0;
        background: white;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        border-radius: 4px;
        min-width: 150px;
        display: none;
        z-index: 100;
    }

    .sort-menu.show {
        display: block;
    }

    .sort-item {
        display: block;
        padding: 10px 15px;
        text-decoration: none;
        color: #333;
        font-size: 14px;
    }

    .sort-item:hover {
        background-color: #f5f5f5;
    }
</style>

<script type="text/javascript">
    function addToCart(id) {
        $.ajax({
            type: 'POST',
            url: "@Url.Action("ThemGioHang", "GioHang")",
            data: { id: id },
            success: function (result) {
                getGioHangPartial();
                if (result.success == true) {
                    alert(result.message);
                }
            }
        });
    }
</script>


<script>
    document.addEventListener('DOMContentLoaded', function () {
        const sliderContainer = document.querySelector('.slider-container');
        const slides = document.querySelectorAll('.slide');
        const dots = document.querySelectorAll('.dot');
        const prevButton = document.querySelector('.prev');
        const nextButton = document.querySelector('.next');

        let currentSlide = 0;

        function updateSlider() {
            sliderContainer.style.transform = `translateX(-${currentSlide * 50}%)`;

            // Update dots
            dots.forEach((dot, index) => {
                dot.classList.toggle('active', index === currentSlide);
            });
        }

        // Next slide
        function nextSlide() {
            currentSlide = (currentSlide + 1) % slides.length;
            updateSlider();
        }

        // Previous slide
        function prevSlide() {
            currentSlide = (currentSlide - 1 + slides.length) % slides.length;
            updateSlider();
        }

        // Event listeners
        nextButton.addEventListener('click', nextSlide);
        prevButton.addEventListener('click', prevSlide);

        // Dot navigation
        dots.forEach((dot, index) => {
            dot.addEventListener('click', () => {
                currentSlide = index;
                updateSlider();
            });
        });

        // Auto slide (optional)
        setInterval(nextSlide, 5000); // Change slide every 5 seconds
    });

    function toggleSort() {
        const menu = document.getElementById('sortMenu');
        menu.classList.toggle('show');
    }

    // Đóng menu khi click ra ngoài
    document.addEventListener('click', function (event) {
        const sortBtn = document.querySelector('.sort-btn');
        const sortMenu = document.getElementById('sortMenu');

        if (!sortBtn.contains(event.target)) {
            sortMenu.classList.remove('show');
        }
    });

    function handleWishlistClick(event, maSP, button) {
        event.preventDefault();  // Ngăn chặn hành vi mặc định
        event.stopPropagation(); // Ngăn chặn sự kiện bubble lên

        toggleYeuThich(maSP, button);
        return false; // Ngăn chặn navigation
    }

    function toggleYeuThich(maSP, button) {
        $.ajax({
            type: 'POST',
            url: '/SanPham/ToggleYeuThich',
            data: { maSP: maSP },
            success: function (result) {
                if (result.success) {
                    $(button).toggleClass('active');
                    var icon = $(button).find('i');
                    if ($(button).hasClass('active')) {
                        icon.removeClass('far').addClass('fas');
                    } else {
                        icon.removeClass('fas').addClass('far');
                    }
                } else {
                    // Nếu chưa đăng nhập hoặc có lỗi
                    if (result.message) {
                        alert(result.message);
                        if (result.message.includes('đăng nhập')) {
                            window.location.href = '/NguoiDung/DangNhap';
                        }
                    }
                }
            },
            error: function () {
                alert('Có lỗi xảy ra khi thực hiện thao tác!');
            }
        });

        return false; // Ngăn chặn sự kiện navigation
    }
</script>

@* Banner *@
<section class="promo-banner">
    <div class="slider">
        <div class="slider-container">
            <div class="slide">
                <img src="~/Content/Images/banner1.png" alt="Holiday Season Banner" />
            </div>
            <div class="slide">
                <img src="~/Content/Images/banner2.png" alt="Promotion Banner" />
            </div>
            <div class="slide">
                <img src="~/Content/Images/banner3.png" alt="Promotion Banner" />
            </div>
        </div>

        <!-- Navigation Buttons -->
        <button class="slider-button prev">&#10094;</button>
        <button class="slider-button next">&#10095;</button>

        <!-- Dots/Indicators -->
        <div class="slider-dots">
            <span class="dot active"></span>
            <span class="dot"></span>
            <span class="dot"></span>
        </div>
    </div>
</section>

@* Product *@
<div class="app__container" style="background-color: transparent; margin-top: 20px;">
    <div class="grid wide">
        <div class="row sm-gutter">
            <!-- Category filter bên trái -->
            <div class="col l-2 m-0 c-0">
                <div class="category-filter">
                    <h3 class="category-title">CATEGORY</h3>
                    <ul class="category-list">
                        @foreach (var item in Model.listLoai)
                        {
                            <li class="category-item" style="padding: 3.4px 0">
                                @Html.ActionLink(item.TenLoai, "SanPhamLoai", "Loai", new { @Id = item.MaLoai }, new { @class = "category-item-link" })
                            </li>
                        }
                    </ul>
                </div>
            </div>

            <!-- Product list bên phải -->
            <div class="col l-10 m-12 c-12">
                <div class="product-header">
                    <h2 class="product-title">
                        SẢN PHẨM MỚI
                        <span>(@(Model.listSP?.Count() ?? 0) items)</span>
                    </h2>
                    <div class="sort-dropdown">
                        <button class="sort-btn" onclick="toggleSort()">
                            <span>SORT</span>
                            <i class="fas fa-chevron-down"></i>
                        </button>
                        <div class="sort-menu" id="sortMenu">
                            <a href="@Url.Action("Index", new { sortOrder = "price_asc" })" class="sort-item">Giá tăng dần</a>
                            <a href="@Url.Action("Index", new { sortOrder = "price_desc" })" class="sort-item">Giá giảm dần</a>
                            <a href="@Url.Action("Index", new { sortOrder = "newest" })" class="sort-item">Mới nhất</a>
                        </div>
                    </div>
                </div>

                <div class="product-grid">
                    @foreach (var item in Model.listSP)
                    {
                        <div class="product-item">
                            <a href="@Url.Action("Detail", "SanPham", new { id = item.MaSP })" class="product-link">
                                <div class="product-image">
                                    <img src="@item.Hinh" alt="@item.TenSP" />
                                    <button class="wishlist-btn @(ViewBag.LikedProducts?.Contains(item.MaSP) ?? false ? "active" : "")"
                                            onclick="handleWishlistClick(event, @item.MaSP, this)">
                                        <i class="@(ViewBag.LikedProducts?.Contains(item.MaSP) ?? false ? "fas" : "far") fa-heart"></i>
                                    </button>
                                </div>
                                <div class="product-info">
                                    <div class="product-price">
                                        <span class="current-price">@item.GiaSP.ToString("N0")đ</span>
                                    </div>
                                    <h3 class="product-name">@item.TenSP</h3>
                                    <div class="product-colors">
                                        <span class="color-dot" style="background-color: #B7E4E0"></span>
                                        <span class="color-dot" style="background-color: #FFFFFF"></span>
                                    </div>
                                </div>
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>